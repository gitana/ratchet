<?xml version='1.0'?>
<project name="Ratchet" basedir="." default="update">
    <!-- load custom properties file -->
    <property file="custom-local.properties"/>

    <!-- load properties from file -->
    <property file="local.properties"/>

    <property name="project.dir" value="."/>

    <property name="js.dir" value="js"/>
    <property name="lib.dir" value="${project.dir}/lib"/>
    <property name="examples.dir" value="${project.dir}/examples"/>
    <property name="tests.dir" value="${project.dir}/tests"/>

    <property name="build.dir" value="${project.dir}/build"/>

    <property name="prep.dir" value="${build.dir}/prep"/>
    <property name="package.dir" value="${build.dir}/package"/>

    <property name="yui-compressor" value="${project.dir}/tool/yuicompressor-2.4.7.jar"/>

    <target name="setup" description="Creates all required directories" depends="clean">
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="prep" description="Creates all required directories" depends="setup">
        <mkdir dir="${prep.dir}"/>
        <mkdir dir="${prep.dir}/js"/>
        <mkdir dir="${prep.dir}/lib"/>
        <mkdir dir="${prep.dir}/tests"/>
        <mkdir dir="${prep.dir}/examples"/>
        <mkdir dir="${prep.dir}/dynamic"/>
        <mkdir dir="${package.dir}"/>
        <mkdir dir="${package.dir}/js"/>
        <mkdir dir="${package.dir}/thirdparty"/>
        <mkdir dir="${package.dir}/lib"/>
        <mkdir dir="${package.dir}/examples"/>
        <mkdir dir="${package.dir}/dynamic"/>

        <copy todir="${prep.dir}/js">
            <fileset dir="js"/>
        </copy>
        <copy todir="${prep.dir}/thirdparty">
            <fileset dir="thirdparty"/>
        </copy>
        <copy todir="${prep.dir}/lib">
            <fileset dir="${lib.dir}"/>
        </copy>
        <copy todir="${prep.dir}/examples">
            <fileset dir="${examples.dir}"/>
        </copy>
        <copy todir="${prep.dir}/tests">
            <fileset dir="${tests.dir}"/>
        </copy>
        <copy todir="${prep.dir}/dynamic">
            <fileset dir="dynamic"/>
        </copy>
        <copy todir="${prep.dir}/">
            <fileset dir="${project.dir}">
                <include name="favicon.ico"/>
                <include name="index.html"/>
                <include name="resources.html"/>
                <include name="license.txt"/>
            </fileset>
        </copy>
    </target>

    <target name="concat-js" description="Concat all javascript files" depends="prep">

        <!-- Standalone: "ratchet" -->
        <concat destfile="${package.dir}/js/${appkey}.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">

                <!-- Required Base Classes -->
                <file name="base.js"/>
                <file name="json2.js"/>
                <file name="jquery.hashchange.js"/>
                <file name="form2object.js"/>

            </filelist>
            <filelist dir="${prep.dir}/js">

                <!-- Ratchet Core -->
                <file name="Ratchet.js"/>
                <file name="Utils.js"/>
                <file name="Observable.js"/>
                <file name="Observables.js"/>
                <file name="ScopedObservables.js"/>
                <file name="Storage.js"/>
                <file name="RenderContext.js"/>
                <file name="Gadget.js"/>
                <file name="GadgetRegistry.js"/>
                <file name="TemplateEngineRegistry.js"/>
                <file name="BaseTemplateEngine.js"/>
                <file name="AbstractAuthenticator.js"/>
                <file name="Events.js"/>

                <!-- jQuery Support -->
                <file name="jQueryAdapter.js"/>

                <!-- Default Region Resolver -->
                <file name="DefaultRegionResolver.js"/>

            </filelist>
        </concat>

        <!-- Standalone: "ratchet-handlebars" -->
        <concat destfile="${package.dir}/js/${appkey}-handlebars.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js/engines">
                <file name="HandlebarsTemplateEngine.js"/>
            </filelist>
        </concat>

        <!-- Standalone: "ratchet-tmpl" -->
        <concat destfile="${package.dir}/js/${appkey}-tmpl.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js/engines">
                <file name="jQueryTemplateEngine.js"/>
            </filelist>
        </concat>

        <!-- Standalone: "ratchet-web" -->
        <concat destfile="${package.dir}/js/${appkey}-web.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">

                <!-- Required Base Classes -->
                <file name="base.js"/>

            </filelist>
            <filelist dir="${prep.dir}/js">

                <!-- dynamics -->
                <file name="web/Dynamic.js" />
                <file name="web/AbstractDynamicGadget.js" />
                <file name="web/AbstractDynamicPage.js" />
                <file name="web/DynamicRegionResolver.js" />
                <file name="web/AbstractViewer.js" />
                <file name="web/ViewerRegistry.js" />
                <file name="web/AbstractEditor.js" />
                <file name="web/EditorRegistry.js" />

            </filelist>
        </concat>

        <!-- Standalone: "ratchet-gitana" -->
        <concat destfile="${package.dir}/js/${appkey}-gitana.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="gitana/GitanaAuthentication.js"/>
                <file name="gitana/AbstractGitanaAuthenticator.js"/>
                <file name="gitana/GitanaImplicitFlowAuthenticator.js"/>
                <file name="gitana/GitanaUsernamePasswordAuthenticator.js"/>
            </filelist>
        </concat>

        <!-- Standalone: "ratchet-actions" -->
        <concat destfile="${package.dir}/js/${appkey}-actions.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="actions/Actions.js"/>
                <file name="actions/AbstractAction.js"/>
                <file name="actions/AbstractUIAction.js"/>
                <file name="actions/ConsoleLogAction.js"/>
            </filelist>
        </concat>

        <!-- Standalone: "ratchet-config" -->
        <concat destfile="${package.dir}/js/${appkey}-config.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="config/Configuration.js"/>
                <file name="config/AbstractConfigurationEvaluator.js"/>
                <file name="config/TypeConfigurationEvaluator.js"/>
                <file name="config/ActionGroupConfigurationEvaluator.js"/>
                <file name="config/LocaleConfigurationEvaluator.js"/>
                <file name="config/ApplicationConfigurationEvaluator.js"/>
                <file name="config/PageConfigurationEvaluator.js"/>
                <file name="config/ViewerConfigurationEvaluator.js"/>
                <file name="config/EditorConfigurationEvaluator.js"/>

                <!-- logic -->
                <file name="config/logic/and.js"/>
                <file name="config/logic/or.js"/>
                <file name="config/logic/not.js"/>

            </filelist>
        </concat>

        <!-- Standalone: "ratchet-messages" -->
        <concat destfile="${package.dir}/js/${appkey}-messages.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">
                <file name="date.js"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="messages/Messages.js"/>
            </filelist>
        </concat>




        <!--                                                                                 -->
        <!--                                                                                 -->
        <!--                                   COMPONENTS                                    -->
        <!--                                                                                 -->
        <!--                                                                                 -->

        <!-- NOTE: these get build into the prep directory only -->

        <!-- Standalone: "ratchet" -->
        <concat destfile="${prep.dir}/js/${appkey}-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">

                <!-- Required Base Classes -->
                <file name="base.js"/>
                <file name="json2.js"/>
                <file name="jquery.hashchange.js"/>
                <file name="form2object.js"/>

            </filelist>
            <filelist dir="${prep.dir}/js">

                <!-- Ratchet Core -->
                <file name="Ratchet.js"/>
                <file name="Utils.js"/>
                <file name="Observable.js"/>
                <file name="Observables.js"/>
                <file name="ScopedObservables.js"/>
                <file name="Storage.js"/>
                <file name="RenderContext.js"/>
                <file name="Gadget.js"/>
                <file name="GadgetRegistry.js"/>
                <file name="TemplateEngineRegistry.js"/>
                <file name="BaseTemplateEngine.js"/>
                <file name="AbstractAuthenticator.js"/>
                <file name="Events.js"/>

                <!-- jQuery Support -->
                <file name="jQueryAdapter.js"/>

                <!-- Default Region Resolver -->
                <file name="DefaultRegionResolver.js"/>

            </filelist>
        </concat>

        <!-- "ratchet-tmpl" -->
        <concat destfile="${prep.dir}/js/${appkey}-tmpl-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js/engines">
                <file name="jQueryTemplateEngine.js"/>
            </filelist>
        </concat>

        <!-- "ratchet-handlebars" -->
        <concat destfile="${prep.dir}/js/${appkey}-handlebars-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js/engines">
                <file name="HandlebarsTemplateEngine.js"/>
            </filelist>
        </concat>

        <!-- "ratchet-web" -->
        <concat destfile="${prep.dir}/js/${appkey}-web-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">
                <file name="base.js"/>
            </filelist>
            <filelist dir="${prep.dir}/js">

                <!-- dynamics -->
                <file name="web/Dynamic.js" />
                <file name="web/AbstractDynamicGadget.js" />
                <file name="web/AbstractDynamicPage.js" />
                <file name="web/DynamicRegionResolver.js" />
                <file name="web/AbstractViewer.js" />
                <file name="web/ViewerRegistry.js" />
                <file name="web/AbstractEditor.js" />
                <file name="web/EditorRegistry.js" />

            </filelist>
        </concat>

        <!-- "ratchet-gitana" -->
        <concat destfile="${prep.dir}/js/${appkey}-gitana-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="gitana/GitanaAuthentication.js"/>
                <file name="gitana/AbstractGitanaAuthenticator.js"/>
                <file name="gitana/GitanaImplicitFlowAuthenticator.js"/>
                <file name="gitana/GitanaUsernamePasswordAuthenticator.js"/>
            </filelist>
        </concat>

        <!-- "ratchet-actions" -->
        <concat destfile="${prep.dir}/js/${appkey}-actions-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">
                <file name="base.js"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="actions/Actions.js"/>
                <file name="actions/AbstractAction.js"/>
                <file name="actions/AbstractUIAction.js"/>
                <file name="actions/ConsoleLogAction.js"/>
            </filelist>
        </concat>

        <!-- "ratchet-config" -->
        <concat destfile="${prep.dir}/js/${appkey}-config-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">
                <file name="base.js"/>
            </filelist>
            <filelist dir="${prep.dir}/js">

                <file name="config/Configuration.js"/>
                <file name="config/AbstractConfigurationEvaluator.js"/>
                <file name="config/TypeConfigurationEvaluator.js"/>
                <file name="config/ActionGroupConfigurationEvaluator.js"/>
                <file name="config/LocaleConfigurationEvaluator.js"/>
                <file name="config/GadgetConfigurationEvaluator.js"/>
                <file name="config/ApplicationConfigurationEvaluator.js"/>
                <file name="config/PageConfigurationEvaluator.js"/>
                <file name="config/ViewerConfigurationEvaluator.js"/>
                <file name="config/EditorConfigurationEvaluator.js"/>

                <!-- logic -->
                <file name="config/logic/and.js"/>
                <file name="config/logic/or.js"/>
                <file name="config/logic/not.js"/>

            </filelist>
        </concat>

        <!-- "ratchet-messages" -->
        <concat destfile="${prep.dir}/js/${appkey}-messages-component.js">
            <filelist dir="${prep.dir}">
                <file name="license.txt"/>
            </filelist>
            <filelist dir="${prep.dir}/thirdparty">
                <file name="base.js"/>
                <file name="date.js"/>
            </filelist>
            <filelist dir="${prep.dir}/js">
                <file name="messages/Messages.js"/>
            </filelist>
        </concat>

    </target>

    <target name="compress" description="Compress the javascript" depends="concat-js">
        <echo>Compressing Javascript...</echo>
        <apply executable="java" parallel="false" dest="${build.dir}/package">
            <fileset dir="${build.dir}/package">
                <include name="**/*.js"/>
                <exclude name="**/*-min.js"/>
                <exclude name="**/*.min.js"/>
            </fileset>
            <arg line="-jar"/>
            <arg path="${yui-compressor}"/>
            <arg line="-o"/>
            <targetfile/>
            <srcfile/>
            <mapper type="glob" from="*.js" to="*.min.js"/>
        </apply>
    </target>

    <target name="prep-html" description="Prepare all htmls" depends="compress">

        <!-- replace source files with built ratchet -->
        <replaceregexp match="&lt;!-- START_RATCHET_JAVASCRIPT --&gt;(.*?)&lt;!-- END_RATCHET_JAVASCRIPT --&gt;"
                       replace='&lt;script type="text\/javascript" src="../js/ratchet.min.js"&gt;&lt;/script&gt;' flags="gs">
            <fileset dir="${prep.dir}" includes="examples/**/*.html"/>
        </replaceregexp>

        <!-- replace source files with built ratchet -->
        <replaceregexp match="&lt;!-- START_RATCHET_TMPL_JAVASCRIPT --&gt;(.*?)&lt;!-- END_RATCHET_TMPL_JAVASCRIPT --&gt;"
                       replace='&lt;script type="text\/javascript" src="../js/ratchet-tmpl.min.js"&gt;&lt;/script&gt;' flags="gs">
            <fileset dir="${prep.dir}" includes="examples/**/*.html"/>
        </replaceregexp>

        <!-- replace source files with built ratchet -->
        <replaceregexp match="&lt;!-- START_RATCHET_HANDLEBARS_JAVASCRIPT --&gt;(.*?)&lt;!-- END_RATCHET_HANDLEBARS_JAVASCRIPT --&gt;"
                       replace='&lt;script type="text\/javascript" src="../js/ratchet-handlebars.min.js"&gt;&lt;/script&gt;' flags="gs">
            <fileset dir="${prep.dir}" includes="examples/**/*.html"/>
        </replaceregexp>

        <copy todir="${package.dir}/examples">
            <fileset dir="${prep.dir}/examples" includes="**/*"/>
        </copy>
        <copy todir="${package.dir}/tests">
            <fileset dir="${prep.dir}/tests">
                <exclude name="js/**/*"/>
            </fileset>
        </copy>
        <copy todir="${package.dir}">
            <fileset dir="${prep.dir}">
                <include name="favicon.ico"/>
                <include name="index.html"/>
                <include name="resources.html"/>
            </fileset>
        </copy>

        <!-- copy the JS files into examples -->
        <copy todir="${package.dir}/examples/js">
            <fileset dir="${package.dir}/js">
                <exclude name="**/.DS_Store/*"/>
                <exclude name="**/.idea/*"/>
            </fileset>
        </copy>

    </target>

    <target name="package" depends="prep-html, components">

        <!-- ZIP -->
        <zip destfile="${package.dir}/downloads/${appkey}.zip">
            <fileset dir="${package.dir}">
                <include name="examples/**/*"/>
                <include name="index.html"/>
                <include name="js/**/*"/>
                <include name="lib/**/*"/>
                <include name="tests/**/*"/>
                <exclude name="**/.DS_Store/*"/>
                <exclude name="**/.idea/*"/>
            </fileset>
        </zip>

    </target>
    
    
	<!-- START: Package Web Components -->
    <target name="components">
		<mkdir dir="${package.dir}/components"/>

        <!-- "ratchet" -->
		<mkdir dir="${package.dir}/components/ratchet"/>		
        <copy file="${project.dir}/components/ratchet/component.json.txt" tofile="${package.dir}/components/ratchet/component.json" overwrite="true" filtering="true">
            <filterchain>
                <tokenfilter>
                    <replacestring from="/** VERSION **/" to="${version}"/>
                </tokenfilter>
            </filterchain>
        </copy>
        <copy todir="${package.dir}/components/ratchet">
            <fileset dir="${project.dir}/components/ratchet">
                <exclude name="**/.DS_Store/*"/>
                <exclude name="**/.idea/*"/>
                <exclude name="component.json.txt"/>
            </fileset>
        </copy>
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/${appkey}.js"/>
            <!--<param name="name" value="ratchet" />-->
            <param name="variableName" value="Ratchet" />
            <param name="dependencies" value="['jquery']" />
            <param name="arguments" value="$" />
            <param name="argumentValues" value="root.jQuery" />
        </antcall>

        <!-- "ratchet-tmpl" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-tmpl-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/tmpl.js"/>
            <param name="variableName" value="Ratchet" />
            <param name="dependencies" value="['ratchet/ratchet', 'jquery-tmpl']" />
            <param name="arguments" value="Ratchet, Tmpl" />
            <param name="argumentValues" value="root.Ratchet" />
        </antcall>

        <!-- "ratchet-handlebars" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-handlebars-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/handlebars.js"/>
            <param name="variableName" value="Ratchet" />
            <param name="dependencies" value="['ratchet/ratchet', 'handlebars']" />
            <param name="arguments" value="Ratchet, Handlebars" />
            <param name="argumentValues" value="root.Ratchet, root.Handlebars" />
        </antcall>

        <!-- "ratchet-web" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-web-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/web.js"/>
            <param name="variableName" value="Ratchet" />
            <param name="dependencies" value="['ratchet/ratchet', 'ratchet/config', 'ratchet/messages', 'ratchet/actions']" />
            <param name="arguments" value="Ratchet, Config, Messages, Actions" />
            <param name="argumentValues" value="root.Ratchet" />
        </antcall>

        <!-- "ratchet-gitana" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-gitana-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/gitana.js"/>
            <param name="variableName" value="Ratchet" />
            <param name="dependencies" value="['ratchet/ratchet', 'gitana', 'alpaca']" />
            <param name="arguments" value="Ratchet, Gitana, Alpaca" />
            <param name="argumentValues" value="root.Ratchet, root.Gitana, root.Alpaca" />
        </antcall>

        <!-- "ratchet-dynamic" -->
        <copy todir="${package.dir}/components/ratchet/dynamic">
            <fileset dir="${project.dir}/dynamic">
                <exclude name="**/.DS_Store/*"/>
                <exclude name="**/.idea/*"/>
            </fileset>
        </copy>

        <!-- "ratchet-actions" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-actions-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/actions.js"/>
            <param name="variableName" value="Ratchet.Actions" />
            <param name="dependencies" value="['ratchet/ratchet', 'ratchet/config']" />
            <param name="arguments" value="Ratchet, Config" />
            <param name="argumentValues" value="root.Ratchet" />
        </antcall>

        <!-- "ratchet-config" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-config-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/config.js"/>
            <param name="variableName" value="Ratchet.Configuration" />
            <param name="dependencies" value="['jquery', 'ratchet/ratchet']" />
            <param name="arguments" value="$, Ratchet" />
            <param name="argumentValues" value="root.jQuery, root.Ratchet" />
        </antcall>

        <!-- "ratchet-messages" -->
        <antcall target="umd">
            <param name="scriptFile" value="${prep.dir}/js/${appkey}-messages-component.js"/>
            <param name="outputFile" value="${package.dir}/components/ratchet/messages.js"/>
            <param name="variableName" value="Ratchet.Messages" />
            <param name="dependencies" value="['ratchet/ratchet', 'ratchet/config']" />
            <param name="arguments" value="Ratchet, Config" />
            <param name="argumentValues" value="root.Ratchet" />
        </antcall>


    </target>    
    <!-- END: Package Web Components -->
    

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="webserver-clean">
        <delete>
            <fileset dir="${local.docroot.basepath}/${appkey}" includes="**/*"/>
        </delete>
    </target>

    <fileset id="ratchet-files" dir="${project.dir}">
        <include name="js/**/*"/>
        <include name="plugins/**/*"/>
        <include name="lib/**/*"/>
        <include name="examples/**/*"/>
        <include name="thirdparty/**/*"/>
        <include name="dynamic/**/*"/>
        <include name="tests/**/*"/>
        <include name="*.html"/>
        <include name="favicon.ico"/>
    </fileset>

    <target name="update">
        <copy todir="${local.docroot.basepath}/${appkey}">
            <fileset refid="ratchet-files"/>
        </copy>
        <copy todir="${local.docroot.basepath}/${appkey}">
            <fileset dir="${project.dir}/build/package">
                <include name="components/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="full" depends="webserver-clean">
        <copy todir="${local.docroot.basepath}/${appkey}">
            <fileset refid="ratchet-files"/>
        </copy>
        <copy todir="${local.docroot.basepath}/${appkey}">
            <fileset dir="${project.dir}/build/package">
                <include name="components/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="umd">

        <!-- load the script -->
        <loadresource property="script">
            <file file="${scriptFile}"/>
        </loadresource>

        <!-- insertName can only be set once, so if name property exists, get set otherwise default to "" -->
        <condition property="insertName" value="'${name}',">
            <isset property="name"/>
        </condition>
        <property name="insertName" value=""/>

        <!-- create a temp file holding our UMD wrapped script -->
        <copy file="${prep.dir}/lib/umd/wrapper.js" tofile="${scriptFile}.temp" overwrite="true" filtering="true">
            <filterchain>
                <tokenfilter>
                    <replacestring from="/** BUILD_INSERT_SCRIPT **/" to="${script}"/>
                    <replacestring from="/** BUILD_INSERT_NAME **/" to="${insertName}"/>
                    <replacestring from="/** BUILD_INSERT_DEPENDENCIES **/" to="${dependencies}"/>
                    <replacestring from="/** BUILD_INSERT_VARIABLE_NAME **/" to="${variableName}"/>
                    <replacestring from="/** BUILD_INSERT_ARGUMENTS **/" to="${arguments}"/>
                    <replacestring from="/** BUILD_INSERT_ARGUMENT_VALUES **/" to="${argumentValues}"/>
                </tokenfilter>
            </filterchain>
        </copy>
        <concat destfile="${outputFile}">
            <filelist dir="${prep.dir}">
                <file name="js/license.js"/>
            </filelist>
            <filelist>
                <file name="${scriptFile}.temp"/>
            </filelist>
        </concat>
        <delete file="${scriptFile}.temp"/>
    </target>
    
    <target name="package-gadget">
		<mkdir dir="${package.dir}/components/${gadgetName}"/>		
		<copy todir="${package.dir}/components/${gadgetName}">
			<fileset dir="${project.dir}/components/${gadgetName}">
                <exclude name="**/.DS_Store/*"/>
                <exclude name="**/.idea/*"/>
                <exclude name="component.json.txt"/>
			</fileset>
		</copy>
        <copy file="${project.dir}/components/${gadgetName}/component.json.txt" tofile="${package.dir}/components/${gadgetName}/component.json" overwrite="true" filtering="true">
            <filterchain>
                <tokenfilter>
                    <replacestring from="/** VERSION **/" to="${version}"/>
                </tokenfilter>
            </filterchain>
        </copy>    
    </target>

	<target name="update-local-components" depends="components">

		<!-- "ratchet" -->
        <copy todir="/projects/components/ratchet">
            <fileset dir="${package.dir}/components/ratchet"/>
        </copy>

    </target>

</project>
